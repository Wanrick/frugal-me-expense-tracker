org: wanrickw
app: frugal-me-expense-tracker
service: frugal-me-expense-tracker

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-plugin-tracing

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: '20201221'

  # ${self:provider.stage}
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  tracing:
    lambda: true
    apiGateway: true

  logs:
    # Enable API Gateway logs
    restApi: true

  # ${self:provider.environment.*}
  environment:
    EXPENSES_DYNAMODB_TABLE: Expense-${self:provider.stage}
    FM_S3_BUCKET: wanrickw-frugal-me-expense-tracker-s3bucket-${self:provider.stage}
    SIGNED_URL_EXPIRATION: 300

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - xray:PutTelemetryRecords
            - xray:PutTraceSegments
          Resource: "*"

functions:

  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseTemplates:
          application/json: '{"statusCode": "400"}'
        ResponseType: 'DEFAULT_4XX'
        RestApiId:
          Ref: 'ApiGatewayRestApi'

    ExpensesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.EXPENSES_DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        LocalSecondaryIndexes:
          - IndexName: secondaryIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    AttachmentsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.FM_S3_BUCKET}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        PolicyDocument:
          Id: FrugalMeBucketPolicy
          Version: "2012-10-17"
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: s3:*
              Resource: 'arn:aws:s3:::${self:provider.environment.FM_S3_BUCKET}/*'
        Bucket: !Ref AttachmentsBucket